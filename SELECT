-- This shows all of the user history for the user 3
CREATE VIEW user_3_lib AS
SELECT
    *
FROM
    user_library
WHERE
    user_ID = 3;

-- show everything not in the user library
CREATE VIEW user_3_unread_conferences AS
SELECT
    conference_paper_proceedings_ID
FROM
    conference_paper_proceedings
WHERE
    conference_paper_proceedings.conference_paper_proceedings_ID !=(
        SELECT
            user_3_lib.conference_paper_proceedings_ID
        FROM
            user_3_lib
        WHERE
            conference_paper_proceedings_ID IS NOT NULL
    ) -- 
    -- Find author ID of user-- 
    -- 
SELECT
    author_ID
FROM
    user
WHERE
    user_ID = 3 -- 
    -- finds all of the conference paper proceedings that have been written by the user
    -- 
    -- finds out if the user has written the publication
SELECT
    *
from
    author_conference_paper_proceedings
where
    author_id = x -- 
    -- publication 1 selected
    -- 
    -- 
    -- finds the average of everything in publication table
SELECT
    AVG(review_score)
from
    publication_review -- 
    -- finds average of selected publication
SELECT
    AVG(review_score)
from
    publication_review
where
    conference_paper_proceedings_ID = 1 -- = 8 * w1
    -- all the users with an interest in that subject
    -- and then sum the scores given by them create view subject_1_user_group AS
    -- 
    -- Find out the subject ID of the desired conference
    -- 
SELECT
    subject_ID
FROM
    conference_paper_proceedings_subject
WHERE
    conference_paper_proceedings_ID = 1 -- 
    -- 
    -- 
    -- Find all users with an interest in the subject
    -- 
    -- 
    CREATE VIEW subject_1_user_group AS
SELECT
    user_ID
FROM
    user_subject_interests
where
    subject_ID = 1 -- 
    -- 
    -- Finds if they are interested in the subject
SELECT
    SUM(review_score)
FROM
    publication_review as pr
    INNER JOIN subject_1_user_group as s1 on s1.user_ID = pr.user_ID
WHERE
    conference_paper_proceedings_ID = 1 -- 8 * w2
    -- 
    -- 
    -- 
    -- 
    -- 
    -- 
    -- 
    CREATE VIEW authorBookView AS
SELECT
    conference_paper_proceedings_ID
FROM
    author_conference_paper_proceedings
WHERE
    author_ID = 11;

SELECT
    COUNT(acpp.author_ID) as "No. Co-Author"
FROM
    author_conference_paper_proceedings as acpp
    INNER JOIN authorBookView as abv on acpp.conference_paper_proceedings_ID = abv.conference_paper_proceedings_ID
WHERE
    acpp.conference_paper_proceedings_ID = 1
    and acpp.author_ID != 1 -- 0 * w3
    /*For Book*/
    create view authSubScoreBook as
SELECT
    ss.subject_ID,
    pr.review_score,
    ab.author_ID
FROM
    scientific_subject AS ss
    inner join publication_review as pr
    INNER JOIN book_subject AS bs ON pr.book_ID = bs.book_ID
    inner join author_book as ab on pr.book_ID = ab.book_ID
WHERE
    ss.subject_ID = bs.subject_ID;

/*For Thesis*/
create view authSubScoreThesis as
SELECT
    ss.subject_ID,
    pr.review_score,
    ath.author_ID
FROM
    scientific_subject AS ss
    inner join publication_review as pr
    INNER JOIN thesis_subject AS ts ON pr.thesis_ID = ts.thesis_ID
    inner join author_thesis as ath on pr.thesis_ID = ath.thesis_ID
WHERE
    ss.subject_ID = ts.subject_ID;

/*For Journal*/
create view authSubScoreJournal as
SELECT
    ss.subject_ID,
    pr.review_score,
    aja.author_ID
FROM
    scientific_subject AS ss
    inner join publication_review as pr
    inner join journal_article_subject as jas on pr.journal_ID = jas.journal_ID
    inner join author_journal_article as aja on pr.journal_ID = aja.journal_article_ID
WHERE
    ss.subject_ID = jas.subject_ID;

/*For Conference Papers*/
create view authSubScoreConf as
SELECT
    ss.subject_ID,
    pr.review_score,
    acpp.author_ID
FROM
    scientific_subject AS ss
    inner join publication_review as pr
    INNER JOIN conference_paper_proceedings_subject AS cpps ON pr.conference_paper_proceedings_ID = cpps.conference_paper_proceedings_ID
    inner join author_conference_paper_proceedings as acpp on pr.conference_paper_proceedings_ID = acpp.conference_paper_proceedings_ID
WHERE
    ss.subject_ID = cpps.subject_ID;

/*All Subject Review Scores*/
create view allSubjectScores as(
    select
        *
    from
        authSubScoreConf
    union
    all
    select
        *
    from
        authSubScoreJournal
    union
    ALL
    select
        *
    from
        authSubScoreThesis
    UNION
    ALL
    select
        *
    from
        authSubScoreBook
);

/*Filter*/
select
    sum(review_score)
from
    allsubjectscores
where
    author_ID = 11
    and subject_ID = 6
